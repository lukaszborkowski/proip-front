import "./globals.css";
import "slick-carousel/slick/slick.css";
import "slick-carousel/slick/slick-theme.css";
import { Source_Sans_3 } from "next/font/google";
import { cookies } from "next/headers";
import { Calculator } from "../components/Calculator";
import Navbar from "../components/Navbar";

import Footer from "../components/Footer";
import { messages } from "../lib/messages";

const sourceSans = Source_Sans_3({ subsets: ["latin"] });

export const metadata = {
  title: "PRO IP",
  description: "Generated by create next app",
};

const navbarItems = [
  {
    "title-pl": "Internet",
    "title-en": "Internet",
    url: "/#internet",
  },
  {
    "title-pl": "Telewizja",
    "title-en": "TV",
    url: "/#telewizja",
  },
  {
    "title-pl": "Telefon/GSM",
    "title-en": "Phone/GSM",
    url: "/telefony",
  },
  {
    "title-pl": "Dostępność",
    "title-en": "Availability",
    url: "/#availability",
  },
  {
    "title-pl": "Dla biznesu",
    "title-en": "For business",
    url: "/dla-biznesu",
  },
  {
    "title-pl": "F&Q",
    "title-en": "F&Q",
    url: "/pytania",
  },
  {
    "title-pl": "Kontakt",
    "title-en": "Contakt",
    url: "/kontakt",
  },
];

const heroItems = [
  {
    "title-pl": "Internet o prędkości",
    "title-en": "Internet speeds of ",
    "subtitle-pl": "Wielkich możliwości",
    "subtitle-en": "Great possibility",
    "button-text-pl": "sprawdź ofertę",
    "button-text-en": "check out the offer",
    "description-pl": "od {price}miesięcznie*",
    "description-en": "from {price}month*",
    price: "39 zł/",
    image: "/CarouselExample.png",
  },
];

async function getData() {
  const nextCookies = cookies();
  const lang = nextCookies.get("lang")?.value || "pl";

  // const responses = await Promise.all([
  //   fetch(
  //     `${process.env.NEXT_PUBLIC_API_URL}/navbar-elements?acf_format=standard`,
  //     {
  //       cache: "no-store",
  //     }
  //   ).then((res) => res.json()),
  //   fetch(`${process.env.NEXT_PUBLIC_API_URL}/hero-items?acf_format=standard`, {
  //     cache: "no-store",
  //   }).then((res) => res.json()),
  // ]);

  // const navbarItems = (responses[0] || []).map((r) => r.acf).reverse();
  // const heroItems = (responses[1] || []).map((r) => r.acf).reverse();

  return { lang, navbarItems, heroItems, messages };
  return { messages, lang };
}

const RootLayout = async ({ children }) => {
  const content = await getData();
  console.log(content);
  return (
    <html lang="en">
      <body className={sourceSans.className}>
        <Navbar content={content} />
        <main className="overflow-x-hidden">{children}</main>
        <Footer content={content} />
        <Calculator content={content} />
      </body>
    </html>
  );
};

export default RootLayout;
